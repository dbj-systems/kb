[
{
	"uri": "/tags/amazon/",
	"title": "Amazon",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/basics/amazon_lessons_to_learn/",
	"title": "Amazon Lessons to Learn",
	"tags": ["knowledge", "snippets", "Amazon"],
	"description": "Amazon development concepts",
	"content": "  DBJ Comment \u0026ndash; This describes managing the high pressure environment. On lower levels this probably works. But , there are serious issues with the wider picture of this. Primarily value of Architecture is neglected. Architects are called \u0026ldquo;Bar Raisers\u0026rdquo; etc. Mountain of Technical Debt is raising at Amazon. ROI and \u0026ldquo;Time to Market\u0026rdquo; are two key drivers at AMZN 2019. The likely outcome will be AMZN dropping into the hot mess of legacy systems and technical debt. Same as MSFT was in, starting with \u0026ldquo;Longhorn\u0026rdquo; disastrous attempt to combat the huge technical debt. It took MSFT 10+ years of the survival boot-camp to somehow overcome that potentialy fatal disaster.\n Source article\nThe principles of Amazon service-oriented collaboration Here\u0026rsquo;s how Amazon\u0026rsquo;s service-oriented collaboration works based on our research:\n Team structure  Each of the groups that owns a service has a set of goals and possibly a P\u0026amp;L that represents success. A roadmap is generally in place to meet those goals. The teams are ostensibly autonomous and can make any important decision needed to meet their goals. The \u0026ldquo;value to the customer\u0026rdquo; is part of the mission for each team. This codified using content such as mock press releases to ensure developers keep end user needs in mind. As much as possible, teams are kept small, adhering to the two-pizza rule, meaning about six people. Services can be refactored or new services can be spun out to new teams. Teams that don\u0026rsquo;t work are shut down and the technology they created is distributed to other teams or discarded. New teams often are created to solve urgent, end-to-end problems.  Development process  Teams use a shared set of development tools for source code and managing the development pipeline, some offered as shared services. There are many tools and services that are commonly or universally used, but no hard requirements. Every team can do what makes sense to get the job done fast. While this is true, at some point you may have to show with data why you deviated. The DevOps model is fully embraced. Each team performs operational support for its service. Access to most source code is not hard to get. One group can usually quite easily take a look at the source code of another without prior restraint. There are some exceptions. A/B testing and detailed monitoring is widespread and used for almost every aspect of the site and infrastructure. The testing is based on the WebLab service, supported by a team that trains staff on how to make testing statistically significant. Teams do not generally have to worry about the rates of internal use of resources. There is no internal currency changing hands for tracking such usage. Rates of usage internally across services are allocated as part of the budget process and monitored by finance teams who meet periodically with teams to discuss any unusual growth in services and encourage optimization. Decreasing technical debt is not considered a good reason to do anything unless it has an impact on reaching the goals of the team.  Collaboration practices  Changes to one team\u0026rsquo;s service may be implemented by another team who needs the enhanced capability by what is called an Away Team. This team works on the Home Team\u0026rsquo;s code to add what it needs according to established engineering standards and then leaves that code in good order to be maintained by the Home Team who owns the service, with help when needed. When an Away Team is not an option because the requestor doesn\u0026rsquo;t have the ability to implement improvements to the service, this does lead to a management discussion about how to optimize the big picture roadmap. Usually roadmaps are bursting, so accommodating a new request means reshuffling the existing roadmap. If extending a service using an Away Team doesn\u0026rsquo;t work out for some reason, it is perfectly fine to duplicate and create whatever you need to accelerate your progress. There is no concern about duplication across the platform as long as you have a need that will help you move forward. A team creating a service is given credit when they do something that has a positive downstream impact on other services. Management recognizes contributions to the big picture, usually on the P\u0026amp;L of the higher entity. \u0026ldquo;Bar raisers\u0026rdquo;, Amazon staff who act as independent experts who approve key decisions, often who work on other teams, are used not only for hiring, for which they are widely known, but for high impact decisions for design, customer experience, architecture, and A/B testing. It is possible to go against the recommendation of a bar raiser, but such a move is noted and made visible to higher levels of management.   These principles operate somewhat differently based on the part of Amazon that is using them.\nThe oldest, original set of technology that morphed into services is generally called legacy. There is an internal platform called MAWS, which is an internal platform of services that are not public. The public form of AWS is the latest. There may be others we have not heard about.\nFor example, older products such as Amazon.com or Kindle may use services from all three of these layers. Newer products like the Alexa and Echo tend to use more of the public services on AWS.\nThere have been many generations of evolution from legacy to MAWS to AWS and also with respect to development tools. All of these changes happen in waves that may take years to complete.\nThe teams outside AWS proper are less likely to have a P\u0026amp;L at the service or team level. In general, AWS teams are known for having the most methodological purity, a state in which the service, team, and P\u0026amp;L have the same boundary.\nKeep in mind this picture was assembled from talking to many people with different perspectives at different levels of the organization. It would be wonderful to make it sharper. But finding someone who knows the whole picture and detailed history is not easy. Amazon PR staff take note: we are always ready to sit down with Werner Vogels, Amazon CTO, and go over the details.\nHow Kurzweil and Von Hippel explain the power of service-oriented collaboration Amazon\u0026rsquo;s model encourages direct team-to-team, service-to-service collaboration, providing principles for collaboration so that as much progress as possible can take place based on each team optimizing the services it needs directly.\nAs your correspondent came to understand Amazon\u0026rsquo;s model, I realized that the structure of service-oriented collaboration used levers for acceleration that have been documented by two celebrated researchers who have studied how technology development can be optimized.\nMIT professor Eric Von Hippel\u0026rsquo;s research into user-driven innovation shows that when the user is given direct access to the means for creating a solution, potentially at least, tremendous innovation can result. The \u0026ldquo;sticky information\u0026rdquo; that otherwise must be rendered into requirements documents or transferred from user to builder is difficult and never complete. When this step doesn\u0026rsquo;t have to take place because user and builder are the same person or same team, the outcome is much better. Amazon\u0026rsquo;s Away Team model embraces this concept and allows teams to create building blocks that have ideal fit to purpose.\nRay Kurzweil\u0026rsquo;s analysis of the exponential pace of technology development provides another lens through which the power of Amazon\u0026rsquo;s model can be explained. Your correspondent has summarised Kurzweil\u0026rsquo;s model inÂ Research Mission on Technology Leverage, but his thesis is as follows:\n At first, progress in any area of technology seems slow because basic services are being developed. But then, more complex services are built out of the simpler ones, and so on, accelerating the pace of development. At the same time, funding goes to improving services that are most impactful. As the services are used more, the fit to purpose improves.  Kurzweil\u0026rsquo;s research shows how in many different areas of technology, this pattern has held throughout history. At Amazon, my view is that we are still in the early stages of this exponential curve, which is being driven by use of services both inside and outside of Amazon.\nAmazon\u0026rsquo;s model wouldn\u0026rsquo;t work without data from usage driving funding and optimization. End-to-end teams and Away Teams play a crucial role in identifying new services and improving the fit of existing services.\nRight now, AWS has focused on creating general purpose higher level services that all fit into a generic platform for software development. The highest level services are being created on top of the platform by Amazon itself (Amazon.com, Alexa, Kindle, etc) and by AWS customers who are building all sorts of products and IT infrastructure.\n"
},
{
	"uri": "/",
	"title": "DBJ.Systems Methodology",
	"tags": [],
	"description": "The Home Page",
	"content": " DBJ.Systems Methodology Based on TOGAF and CVP.\n Basics  The Basics\n X Files  The X Files are secret knowledge\n "
},
{
	"uri": "/basics/knopets/",
	"title": "Knopets",
	"tags": ["knowledge", "snippets"],
	"description": "Knowledge + Snipets = Knopets",
	"content": " ME DATA can/should be advertised as anti-trulioo platform\n trulioo.com  How imminent is this?\n FIDO2 Project https://en.wikipedia.org/wiki/FIDO2_Project Web Authentication https://www.w3.org/TR/webauthn/ Windows 10 will have \u0026ldquo;no passwords\u0026rdquo; option \u0026ldquo;very soon\u0026rdquo;  Windows 10 says Hello to no passwords with FIDO2 certification  Microsoft has passed another milestone on its quest to kill off passwords. The company has now gained official FIDO2 certification for Windows Hello, the Windows 10 biometric authentication system.    WebAuthn spec is one static web site here: https://github.com/w3c/webauthn/tree/gh-pages\n Morals of Google Search Results\n WORD MARKDOWN Extension\n  "
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/knowledge/",
	"title": "knowledge",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/snippets/",
	"title": "snippets",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/basics/learning/",
	"title": "Learning Things",
	"tags": [],
	"description": "KB for learning the HUGO, LEARN Theme and all the rest",
	"content": " Mermaid diagrams were created by Knut Sveidqvist for easier documentation.\n On Line tool Paste HTML to MarkDown\n Generate a site using Hugo, a Fast and Flexible Website Generator, running in Visual Studio Team Services or Team Foundation Server.\n Learn the Hugo Learn\n Hugo blog from scratch\n YUML\n  "
},
{
	"uri": "/basics/shortcodes/",
	"title": "&#39;LEARN&#39; Theme Short Codes",
	"tags": [],
	"description": "",
	"content": " Button  Nice buttons on your page.\n Children  List the child pages of a page\n Expand  Displays an expandable/collapsible section of text on your page\n Mermaid  Generation of diagram and flowchart from text in a similar manner as markdown\n Notice  Disclaimers to help you structure your page\n Site param  Get value of site params variables in your page.\n "
},
{
	"uri": "/basics/",
	"title": "Basics",
	"tags": [],
	"description": "The Basics",
	"content": " Amazon Lessons to Learn  Amazon development concepts\n Knopets  Knowledge \u0026#43; Snipets = Knopets\n Learning Things  KB for learning the HUGO, LEARN Theme and all the rest\n \u0026#39;LEARN\u0026#39; Theme Short Codes   Button Nice buttons on your page. Children List the child pages of a page Expand Displays an expandable/collapsible section of text on your page Mermaid Generation of diagram and flowchart from text in a similar manner as markdown Notice Disclaimers to help you structure your page Site param Get value of site params variables in your page.  "
},
{
	"uri": "/x-files/",
	"title": "X Files",
	"tags": [],
	"description": "The X Files are secret knowledge",
	"content": " \u0026#39;If\u0026#39;  An interesting poem by Rudyard Kipling\n "
},
{
	"uri": "/x-files/rudyard_kipling/",
	"title": "&#39;If&#39;",
	"tags": ["advice", "life"],
	"description": "An interesting poem by Rudyard Kipling",
	"content": " If you can keep your head when all about you\nAre losing theirs and blaming it on you,\nIf you can trust yourself when all men doubt you,\nBut make allowance for their doubting too;\nIf you can wait and not be tired by waiting,\nOr being lied about, donât deal in lies,\nOr being hated, donât give way to hating,\nAnd yet donât look too good, nor talk too wise:\nIf you can dreamâand not make dreams your master;\nIf you can thinkâand not make thoughts your aim;\nIf you can meet with Triumph and Disaster\nAnd treat those two impostors just the same;\nIf you can bear to hear the truth youâve spoken\nTwisted by knaves to make a trap for fools,\nOr watch the things you gave your life to, broken,\nAnd stoop and build âem up with worn-out tools:\nIf you can make one heap of all your winnings\nAnd risk it on one turn of pitch-and-toss,\nAnd lose, and start again at your beginnings\nAnd never breathe a word about your loss;\nIf you can force your heart and nerve and sinew\nTo serve your turn long after they are gone,\nAnd so hold on when there is nothing in you\nExcept the Will which says to them: âHold on!â\nIf you can talk with crowds and keep your virtue,\nOr walk with Kingsânor lose the common touch,\nIf neither foes nor loving friends can hurt you,\nIf all men count with you, but none too much;\nIf you can fill the unforgiving minute\nWith sixty secondsâ worth of distance run,\nYours is the Earth and everything thatâs in it,\nAndâwhich is moreâyouâll be a Man, my son!\nRudyard Kipling "
},
{
	"uri": "/tags/advice/",
	"title": "advice",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/life/",
	"title": "life",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/basics/shortcodes/button/",
	"title": "Button",
	"tags": [],
	"description": "Nice buttons on your page.",
	"content": "A button is a just a clickable button with optional icon.\n{{% button href=\u0026quot;https://getgrav.org/\u0026quot; %}}Get Grav{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; %}}Get Grav with icon{{% /button %}} {{% button href=\u0026quot;https://getgrav.org/\u0026quot; icon=\u0026quot;fas fa-download\u0026quot; icon-position=\u0026quot;right\u0026quot; %}}Get Grav with icon right{{% /button %}}  Get Grav\n\n\nGet Grav with icon\n\nGet Grav with icon right\n\n\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/basics/shortcodes/children/",
	"title": "Children",
	"tags": [],
	"description": "List the child pages of a page",
	"content": " Use the children shortcode to list the child pages of a page and the further descendants (children\u0026rsquo;s children). By default, the shortcode displays links to the child pages.\nUsage    Parameter Default Description     page current Specify the page name (section name) to display children for   style \u0026ldquo;li\u0026rdquo; Choose the style used to display descendants. It could be any HTML tag name   showhidden \u0026ldquo;false\u0026rdquo; When true, child pages hidden from the menu will be displayed   description \u0026ldquo;false\u0026rdquo; Allows you to include a short text under each page in the list.when no description exists for the page, children shortcode takes the first 70 words of your content. read more info about summaries on gohugo.io   depth 1 Enter a number to specify the depth of descendants to display. For example, if the value is 2, the shortcode will display 2 levels of child pages.  Tips: set 999 to get all descendants   sort none Sort Children By\nWeight - to sort on menu orderName - to sort alphabetically on menu labelIdentifier - to sort alphabetically on identifier set in frontmatterURL - URL    Demo {{% children %}}   {{% children description=\u0026quot;true\u0026quot; %}}   {{% children depth=\u0026quot;3\u0026quot; showhidden=\u0026quot;true\u0026quot; %}}   {{% children style=\u0026quot;h2\u0026quot; depth=\u0026quot;3\u0026quot; description=\u0026quot;true\u0026quot; %}}   {{% children style=\u0026quot;div\u0026quot; depth=\u0026quot;999\u0026quot; %}}   "
},
{
	"uri": "/basics/shortcodes/expand/",
	"title": "Expand",
	"tags": [],
	"description": "Displays an expandable/collapsible section of text on your page",
	"content": " The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\n  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   Usage this shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is \u0026ldquo;Expand me\u0026hellip;\u0026rdquo;)\n{{%expand \u0026quot;Is this learn theme rocks ?\u0026quot; %}}Yes !.{{% /expand%}}    Is this learn theme rocks ?   Yes !   Demo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}}    Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.   "
},
{
	"uri": "/basics/shortcodes/mermaid/",
	"title": "Mermaid",
	"tags": [],
	"description": "Generation of diagram and flowchart from text in a similar manner as markdown",
	"content": " Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.\nJust insert your mermaid code in the mermaid shortcode and that\u0026rsquo;s it.\nFlowchart example {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngraph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  or you can use this alternative syntax:\n ```mermaid graph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two] ```  renders as\ngraph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two]  Sequence example {{\u0026lt;mermaid\u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}}  renders as\nsequenceDiagram participant Alice participant Bob Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts prevail... John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good!  or you can use this alternative syntax:\n ```mermaid sequenceDiagram participant Alice participant Bob Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts prevail... John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good! ```  renders as\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good!  GANTT Example {{\u0026lt;mermaid\u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u0026lt; /mermaid \u0026gt;}}  renders as\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d  or you can use this alternative syntax:\n ```mermaid gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d ```  renders as\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d  Class example  ```mermaid classDiagram Class01 C2 : Where am i? Class09 --* C3 Class09 --| Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08  C2: Cool label ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label  Git example  ```mermaid gitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch ```  renders as\ngitGraph: options { \u0026quot;nodeSpacing\u0026quot;: 150, \u0026quot;nodeRadius\u0026quot;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch  "
},
{
	"uri": "/basics/shortcodes/notice/",
	"title": "Notice",
	"tags": [],
	"description": "Disclaimers to help you structure your page",
	"content": " The notice shortcode shows 4 types of disclaimers to help you structure your page.\nNote {{% notice note %}} A notice disclaimer {{% /notice %}}  renders as\nA notice disclaimer  Info {{% notice info %}} An information disclaimer {{% /notice %}}  renders as\nAn information disclaimer  Tip {{% notice tip %}} A tip disclaimer {{% /notice %}}  renders as\nA tip disclaimer  Warning {{% notice warning %}} An warning disclaimer {{% /notice %}}  renders as\nA warning disclaimer  "
},
{
	"uri": "/basics/shortcodes/siteparam/",
	"title": "Site param",
	"tags": [],
	"description": "Get value of site params variables in your page.",
	"content": "siteparam shortcode is used to help you print values of site params.\nFor instance, in this current site, the editURL variable is used in config.toml\n[params] editURL = \u0026quot;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\u0026quot;  Use the siteparam shortcode to display its value.\n`editURL` Value : {{% siteparam \u0026quot;editURL\u0026quot; %}}  is displayed as\neditURL Value :\n"
}]